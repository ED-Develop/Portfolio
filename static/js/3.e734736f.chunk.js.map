{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItems/Dialog/Dialog.module.css","components/Dialogs/DialogsItems/DialogsItems.module.css","components/Dialogs/Messages/MyMessages/MyMessages.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/YourMessages/YourMessages.module.css","components/Dialogs/Messages/Input/Input.module.css","components/Dialogs/DialogsItems/Dialog/Dialog.jsx","components/Dialogs/DialogsItems/DialogsItems.jsx","components/Dialogs/Messages/MyMessages/MyMessages.jsx","components/Dialogs/Messages/YourMessages/YourMessages.jsx","components/Dialogs/Messages/Input/Input.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","className","style","item","to","id","activeClassName","active","dialog","src","avatar","alt","content","name","date","message","DialogsItems","dialogElemnts","dialogsData","map","lastMessage","items","MyMessages","info","defaultAvatar","YourMessages","maxLength50","maxLength","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","validate","placeholder","Input","addMessage","userId","input","formData","messageText","Messages","messagesData","messageElements","user","s","messages","Dialogs","dialogs","Search","container","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","compose","dialogsPage","messageTextValue","photos","small"],"mappings":"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","file":"static/js/3.e734736f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__iEN4h\",\"container\":\"Dialogs_container__1qpD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__17C2k\",\"dialog\":\"Dialog_dialog__2wMtV\",\"name\":\"Dialog_name__3hZlG\",\"content\":\"Dialog_content__297SS\",\"active\":\"Dialog_active__SsA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"DialogsItems_items__1MA5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MyMessages_avatar__i7zEP\",\"message\":\"MyMessages_message__3Puh2\",\"content\":\"MyMessages_content__K6mGl\",\"info\":\"MyMessages_info__5fUMs\",\"date\":\"MyMessages_date__2juz5\",\"name\":\"MyMessages_name__22-vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3FSwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"YourMessages_avatar__2sMDF\",\"message\":\"YourMessages_message__2FRCv\",\"content\":\"YourMessages_content__1KaNN\",\"info\":\"YourMessages_info__194S3\",\"date\":\"YourMessages_date__M_B-P\",\"name\":\"YourMessages_name__8T4oH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__Ti6SE\"};","import React from 'react';\r\nimport style from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink to={'/messages/' + props.id} activeClassName={style.active}>\r\n                <div className={style.dialog}>\r\n                    <div>\r\n                        <img src={props.avatar} alt=\"avatar\"/>\r\n                    </div>\r\n                    <div className={style.content}>\r\n                        <span className={style.name}>{props.name}</span>\r\n                        <span>{props.date}</span>\r\n                        <p>{props.message}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialog;","import React from 'react';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport style from './DialogsItems.module.css'\r\n\r\nconst DialogsItems = (props) => {\r\n\r\n\r\n    let dialogElemnts = props.dialogsData\r\n        .map(dialog => <Dialog id={dialog.id} name={dialog.name} date={dialog.date} message={dialog.lastMessage}\r\n                               avatar={dialog.avatar}/>);\r\n\r\n    return (\r\n        <div className={style.items}>\r\n            {dialogElemnts}\r\n        </div>\r\n    );\r\n};\r\nexport default DialogsItems;","import React from 'react';\r\nimport style from './MyMessages.module.css';\r\nimport defaultAvatar from '../../../../assets/images/user.png';\r\n\r\nconst MyMessages = (props) => {\r\n  return(\r\n      <div className={style.message}>\r\n          <div className={style.content}>\r\n             <div className={style.info}>\r\n                 <span className={style.name}>Edouard Shvetsov</span>\r\n                 <span className={style.date}>{props.date}</span>\r\n             </div>\r\n              <p>{props.message}</p>\r\n          </div>\r\n          <img className={style.avatar} src={props.avatar || defaultAvatar} alt=\"avatar\"/>\r\n      </div>\r\n  );\r\n};\r\nexport default MyMessages;","import React from 'react';\r\nimport style from './YourMessages.module.css'\r\n\r\nconst YourMessages = (props) => {\r\n  return(\r\n      <div className={style.message}>\r\n          <img className={style.avatar} src=\"https://img.novosti-n.org/upload/ukraine/131388.jpg\" alt=\"avatar\"/>\r\n          <div className={style.content}>\r\n             <div className={style.info}>\r\n                 <span className={style.name}>{props.name}</span>\r\n                 <span className={style.date}>{props.date}</span>\r\n             </div>\r\n              <p>{props.message}</p>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\nexport default YourMessages;","import React from 'react';\r\nimport style from './Input.module.css'\r\nimport {Field,reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLength} from \"../../../../utils/validators\";\r\n\r\nlet maxLength50 = maxLength(50);\r\n\r\nconst Input = ({addMessage, userId}) => {\r\n\r\n    let onAddMessage = (formData) => {\r\n        addMessage(formData.messageText, userId);\r\n    };\r\n\r\n    return (\r\n        <div className={style.input}>\r\n            <img src=\"https://klv-oboi.ru/img/gallery/29/thumbs/thumb_l_15614.jpg\" alt=\"avatar\"/>\r\n                <MessageReduxForm onSubmit={onAddMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field component={Textarea} validate={[maxLength50]} placeholder='Type your message...' name='messageText'/>\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet MessageReduxForm = reduxForm({form: 'message'})(MessageForm);\r\n\r\nexport default Input;","import React from 'react';\r\nimport MyMessages from \"./MyMessages/MyMessages\";\r\nimport s from './Messages.module.css'\r\nimport YourMessages from \"./YourMessages/YourMessages\";\r\nimport Input from \"./Input/Input\";\r\n\r\nconst Messages = ({messagesData,avatar, addMessage, userId}) => {\r\n\r\n\r\nlet messageElements = messagesData\r\n    .map(message => {\r\n        if (message.userId == userId) {\r\n            return <MyMessages date={message.date} message={message.message}\r\n                               avatar={avatar}/>\r\n        } else {\r\n            return <YourMessages date={message.date} message={message.message} name={message.user}\r\n                                 avatar={message.avatar}/>\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <Input userId={userId} addMessage={addMessage}/>\r\n        </div>\r\n    );\r\n}\r\n    ;\r\n    export default Messages;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogsItems from \"./DialogsItems/DialogsItems\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Search from \"../common/Search/Search\";\r\n\r\nconst Dialogs = ({dialogsData, ...props}) => {\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Search placeholder='Search dialog'/>\r\n            <div className={style.container}>\r\n                <DialogsItems dialogsData={dialogsData}/>\r\n                <Messages {...props}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login'/>;\r\n        return <Component {...props}/>\r\n    };\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;","import React from 'react';\r\nimport {addMessage} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesData: state.dialogsPage.messagesData,\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messageTextValue: state.dialogsPage.messageTextValue,\r\n        avatar: state.auth.photos.small,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}