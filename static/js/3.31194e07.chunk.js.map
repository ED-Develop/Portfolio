{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItems/Dialog/Dialog.module.css","components/Dialogs/DialogsItems/DialogsItems.module.css","components/Dialogs/Messages/MyMessages/MyMessages.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/YourMessages/YourMessages.module.css","components/Dialogs/Messages/Input/Input.module.css","components/Dialogs/DialogsItems/Dialog/Dialog.jsx","utils/dateFormatter.js","components/Dialogs/DialogsItems/DialogsItems.jsx","components/Dialogs/Messages/MyMessages/MyMessages.jsx","components/Dialogs/Messages/YourMessages/YourMessages.jsx","components/Dialogs/Messages/Input/Input.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","className","style","item","to","id","activeClassName","active","dialog","src","avatar","defaultAvatar","alt","content","name","date","userActivityDate","dateFormatter","dateStart","Date","setHours","getHours","difference","now","Math","ceil","DialogsItems","dialogElemnts","dialogs","map","dialogsActivityDate","lastDialogActivityDate","lastUserActivityDate","key","userName","photos","small","items","MyMessages","message","info","login","YourMessages","maxLength50","maxLength","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","castomClassName","component","Textarea","validate","placeholder","Input","addMessage","userId","input","formData","messageText","Messages","messages","messageElements","user","s","length","Dialogs","Search","container","DialogsContainer","this","toggleIsSuccess","getDialogs","match","params","getMessages","isFetching","Preloader","React","Component","compose","connect","state","auth","app","withAuthRedirect","withRouter"],"mappings":"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","file":"static/js/3.31194e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__iEN4h\",\"container\":\"Dialogs_container__1qpD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__17C2k\",\"dialog\":\"Dialog_dialog__2wMtV\",\"name\":\"Dialog_name__3hZlG\",\"content\":\"Dialog_content__297SS\",\"active\":\"Dialog_active__SsA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"DialogsItems_items__1MA5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MyMessages_avatar__i7zEP\",\"message\":\"MyMessages_message__3Puh2\",\"content\":\"MyMessages_content__K6mGl\",\"info\":\"MyMessages_info__5fUMs\",\"date\":\"MyMessages_date__2juz5\",\"name\":\"MyMessages_name__22-vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3FSwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"YourMessages_avatar__2sMDF\",\"message\":\"YourMessages_message__2FRCv\",\"content\":\"YourMessages_content__1KaNN\",\"info\":\"YourMessages_info__194S3\",\"date\":\"YourMessages_date__M_B-P\",\"name\":\"YourMessages_name__8T4oH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__Ti6SE\"};","import React from 'react';\r\nimport style from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport defaultAvatar from '../../../../assets/images/user.png';\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <NavLink to={'/messages/' + props.id} activeClassName={style.active}>\r\n                <div className={style.dialog}>\r\n                    <div>\r\n                        <img src={props.avatar || defaultAvatar} alt=\"avatar\"/>\r\n                    </div>\r\n                    <div className={style.content}>\r\n                        <span className={style.name}>{props.name}</span>\r\n                        <span>{props.date}</span>\r\n                        <p>Online {props.userActivityDate}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialog;","export const dateFormatter = (date) => {\r\n    let dateStart = new Date(date);\r\n    dateStart.setHours(dateStart.getHours() + 2);\r\n    let dateNow = Date.now();\r\n    let difference = (dateNow - dateStart) / 3600000;\r\n\r\n    if (difference <= 0.01) {\r\n        return 'a min ago';\r\n    } else if (difference <= 0.1) {\r\n        return 'a 5 min ago';\r\n    } else if (difference <= 1.3) {\r\n        return 'an hour ago'\r\n    } else if (difference <= 24) {\r\n        return `${Math.ceil(difference)} hour ago`;\r\n    } else if (difference < 48) {\r\n        return 'yesterday';\r\n    } else if (Math.ceil(difference) / 24 < 31) {\r\n        return `${Math.ceil(difference/24)} days ago`;\r\n    } else {\r\n        return 'a long time ago';\r\n    }\r\n};","import React from 'react';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport style from './DialogsItems.module.css'\r\nimport {dateFormatter} from \"../../../utils/dateFormatter\";\r\n\r\nconst DialogsItems = (props) => {\r\n\r\n\r\n    let dialogElemnts = props.dialogs\r\n        .map(dialog => {\r\n            let dialogsActivityDate = dateFormatter(dialog.lastDialogActivityDate);\r\n            let userActivityDate = dateFormatter(dialog.lastUserActivityDate);\r\n\r\n            return <Dialog key={dialog.id} id={dialog.id} name={dialog.userName} date={dialogsActivityDate}\r\n                           userActivityDate={userActivityDate} avatar={dialog.photos.small}/>\r\n        });\r\n\r\n    return (\r\n        <div className={style.items}>\r\n            {dialogElemnts}\r\n        </div>\r\n    );\r\n};\r\nexport default DialogsItems;","import React from 'react';\r\nimport style from './MyMessages.module.css';\r\nimport defaultAvatar from '../../../../assets/images/user.png';\r\n\r\nconst MyMessages = (props) => {\r\n  return(\r\n      <div className={style.message}>\r\n          <div className={style.content}>\r\n             <div className={style.info}>\r\n                 <span className={style.name}>{props.login}</span>\r\n                 <span className={style.date}>{props.date}</span>\r\n             </div>\r\n              <p>{props.message}</p>\r\n          </div>\r\n          <img className={style.avatar} src={props.avatar || defaultAvatar} alt=\"avatar\"/>\r\n      </div>\r\n  );\r\n};\r\nexport default MyMessages;","import React from 'react';\r\nimport style from './YourMessages.module.css'\r\n\r\nconst YourMessages = (props) => {\r\n  return(\r\n      <div className={style.message}>\r\n          <img className={style.avatar} src=\"https://img.novosti-n.org/upload/ukraine/131388.jpg\" alt=\"avatar\"/>\r\n          <div className={style.content}>\r\n             <div className={style.info}>\r\n                 <span className={style.name}>{props.name}</span>\r\n                 <span className={style.date}>{props.date}</span>\r\n             </div>\r\n              <p>{props.message}</p>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\nexport default YourMessages;","import React from 'react';\r\nimport style from './Input.module.css'\r\nimport {Field,reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLength} from \"../../../../utils/validators\";\r\nimport defaultAvatar from '../../../../assets/images/user.png';\r\n\r\nlet maxLength50 = maxLength(50);\r\n\r\nconst Input = ({addMessage, userId, avatar, login}) => {\r\n\r\n    let onAddMessage = (formData) => {\r\n        addMessage(formData.messageText, userId, login);\r\n    };\r\n\r\n    return (\r\n        <div className={style.input}>\r\n            <img src={avatar || defaultAvatar} alt=\"avatar\"/>\r\n                <MessageReduxForm onSubmit={onAddMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field castomClassName={'top'} component={Textarea} validate={[maxLength50]} placeholder='Type your message...' name='messageText'/>\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nlet MessageReduxForm = reduxForm({form: 'message'})(MessageForm);\r\n\r\nexport default Input;","import React from 'react';\r\nimport MyMessages from \"./MyMessages/MyMessages\";\r\nimport s from './Messages.module.css'\r\nimport YourMessages from \"./YourMessages/YourMessages\";\r\nimport Input from \"./Input/Input\";\r\n\r\nconst Messages = ({messages,avatar, addMessage, userId, login}) => {\r\n\r\n\r\nlet messageElements = messages\r\n    .map(message => {\r\n        if (message.userId == userId) {\r\n            return <MyMessages key={message.id} date={message.date} message={message.message}\r\n                               avatar={avatar} login={login}/>\r\n        } else {\r\n            return <YourMessages key={message.id} date={message.date} message={message.message} name={message.user}\r\n                                 avatar={message.avatar}/>\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.messages}>\r\n                {messages.length ? messageElements : <h1>Send first message</h1>}\r\n            </div>\r\n            <Input login={login} avatar={avatar} userId={userId} addMessage={addMessage}/>\r\n        </div>\r\n    );\r\n}\r\n    ;\r\n    export default Messages;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogsItems from \"./DialogsItems/DialogsItems\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Search from \"../common/Search/Search\";\r\n\r\nconst Dialogs = ({dialogs, ...props}) => {\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <Search placeholder='Search dialog'/>\r\n            <div className={style.container}>\r\n                <DialogsItems dialogs={dialogs}/>\r\n                <Messages {...props}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessage, getDialogs, getMessages, sendMessage} from \"../../Redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {toggleIsSuccess} from \"../../Redux/appReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsSuccess(false);\r\n        this.props.getDialogs();\r\n        if (this.props.match.params.userId) {\r\n            this.props.getMessages(this.props.match.params.userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {toggleIsSuccess, ...props} = this.props;\r\n        if (!this.props.match.params.userId && this.props.dialogs.length) {\r\n            return <Redirect to={`/messages/${this.props.dialogs[0].id}`}/>\r\n        }\r\n        if (this.props.isFetching) return <Preloader/>;\r\n        return (\r\n                <Dialogs {...props}/>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogs.messages,\r\n        dialogs: state.dialogs.dialogs,\r\n        avatar: state.auth.photos.small,\r\n        login: state.auth.login,\r\n        userId: state.auth.userId,\r\n        isFetching: state.app.isFetching\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, {addMessage,getMessages, toggleIsSuccess, getDialogs}),\r\n    withAuthRedirect, withRouter)(DialogsContainer);"],"sourceRoot":""}