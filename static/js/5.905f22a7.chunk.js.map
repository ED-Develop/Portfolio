{"version":3,"sources":["components/Login/Login.module.css","components/Login/LoginForm/LoginForm.module.css","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","style","field","Field","validate","email","required","castomClassName","component","Input","name","placeholder","type","remember","captchaURL","captcha","src","alt","btn_login","error","summaryError","connect","state","isAuth","auth","isFetching","peoplePage","login","to","container","Preloader","wrapper","description","formData","form_background"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,gBAAkB,+BAA+B,KAAO,oBAAoB,YAAc,6B,oBCAlLD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,QAAU,2BAA2B,SAAW,4BAA4B,UAAY,6BAA6B,aAAe,kC,iICgCxKC,EAFMC,YAAU,CAACC,KAAM,SAAjBD,EAzBH,SAACE,GACf,OACI,0BAAMC,SAAUD,EAAME,cAClB,yBAAKC,UAAWC,IAAMC,OAClB,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAOC,KAAWC,gBAAiB,OAAQC,UAAWC,IAAOC,KAAM,QAC9EC,YAAa,gBAExB,yBAAKX,UAAWC,IAAMC,OAClB,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACE,KAAWC,gBAAiB,OAAQC,UAAWC,IAAOC,KAAM,WACvEC,YAAa,WAAYC,KAAM,cAE1C,yBAAKZ,UAAWC,IAAMY,UAClB,+BAAO,kBAACV,EAAA,EAAD,CAAOK,UAAU,QAAQE,KAAM,aAAcE,KAAM,aAA1D,gBAEHf,EAAMiB,YAAc,yBAAKd,UAAWC,IAAMc,SACvC,yBAAKC,IAAKnB,EAAMiB,WAAYG,IAAI,YAChC,kBAACd,EAAA,EAAD,CAAOC,SAAU,CAACE,KAAWC,gBAAiB,UAAWC,UAAWC,IAAOC,KAAM,UAC1EC,YAAa,wBAExB,4BAAQX,UAAWC,IAAMiB,WAAzB,aACCrB,EAAMsB,OAAS,yBAAKnB,UAAWC,IAAMmB,cAAevB,EAAMsB,W,gCCwBxDE,uBARO,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBE,WAAYH,EAAMI,WAAWD,WAC7BX,WAAYQ,EAAME,KAAKV,cAIS,CAACa,UAAOH,UAAjCH,EAzCD,SAAC,GAA6C,IAA5CM,EAA2C,EAA3CA,MAAOJ,EAAoC,EAApCA,OAAQE,EAA4B,EAA5BA,WAAYX,EAAgB,EAAhBA,WAIvC,OAAIS,EACO,kBAAC,IAAD,CAAUK,GAAG,MAGpB,yBAAK5B,UAAWC,IAAM4B,WACjBJ,GAAc,kBAACK,EAAA,EAAD,MACf,yBAAK9B,UAAWC,IAAM8B,SAClB,6BACI,yBAAK/B,UAAWC,IAAM+B,aAClB,kDACA,sFACA,wEAGR,6BACI,yBAAKhC,UAAWC,IAAML,MAClB,qCACA,oDACA,kBAAC,EAAD,CAAgBkB,WAAYA,EAAYhB,SArB3C,SAACmC,GACdN,EAAMM,OAsBM,yBAAKjC,UAAWC,IAAMiC,iBAClB","file":"static/js/5.905f22a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__1Z_7c\",\"wrapper\":\"Login_wrapper__3o8jR\",\"form_background\":\"Login_form_background__JJrZp\",\"form\":\"Login_form__zVgC5\",\"description\":\"Login_description__gAvRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"LoginForm_field__2LM1y\",\"captcha\":\"LoginForm_captcha__2iwFu\",\"remember\":\"LoginForm_remember__2COhv\",\"btn_login\":\"LoginForm_btn_login__2LFQ0\",\"summaryError\":\"LoginForm_summaryError__3QepW\"};","import React from 'react';\r\nimport style from './LoginForm.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {email, required} from \"../../../utils/validators\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.field}>\r\n                <Field validate={[email, required]} castomClassName={'left'} component={Input} name={'email'}\r\n                       placeholder={'Your Email'}/>\r\n            </div>\r\n            <div className={style.field}>\r\n                <Field validate={[required]} castomClassName={'left'} component={Input} name={'password'}\r\n                       placeholder={'Password'} type={\"password\"}/>\r\n            </div>\r\n            <div className={style.remember}>\r\n                <label><Field component=\"input\" name={'rememberMe'} type={\"checkbox\"}/>remember me</label>\r\n            </div>\r\n            {props.captchaURL && <div className={style.captcha}>\r\n                <img src={props.captchaURL} alt=\"captcha\"/>\r\n                <Field validate={[required]} castomClassName={'captcha'} component={Input} name={'captcha'}\r\n                       placeholder={'Symbols from image'} />\r\n            </div>}\r\n            <button className={style.btn_login}>Login Now</button>\r\n            {props.error && <div className={style.summaryError}>{props.error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nlet LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {auth, login} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst Login = ({login, isAuth, isFetching, captchaURL}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData);\r\n    };\r\n    if (isAuth) {\r\n        return <Redirect to='/'/>\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            {isFetching && <Preloader/>}\r\n            <div className={style.wrapper}>\r\n                <div>\r\n                    <div className={style.description}>\r\n                        <h1>Find a cool job!!!</h1>\r\n                        <p>Portfolio is a social network that helps you get a job.</p>\r\n                        <p>So what are you waiting for? Start now.</p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={style.form}>\r\n                        <h3>Login</h3>\r\n                        <p>Log into your account</p>\r\n                        <LoginReduxForm captchaURL={captchaURL} onSubmit={onSubmit}/>\r\n                    </div>\r\n                    <div className={style.form_background}>\r\n                        <div>Login</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isFetching: state.peoplePage.isFetching,\r\n        captchaURL: state.auth.captchaURL\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {login, auth})(Login);"],"sourceRoot":""}